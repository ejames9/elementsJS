0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/5.0.0/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.3.9
3 info using node@v5.0.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/ericfoster/Documents/JavaScript/elementsJS',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/ericfoster/.npm/elementsJS/0.9.28/package.tgz not in flight; packing
9 info lifecycle elementsJS@0.9.28~prepublish: elementsJS@0.9.28
10 silly lifecycle elementsJS@0.9.28~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/Users/ericfoster/.npm/elementsJS/0.9.28/package.tgz',
11 verbose tar pack   '/Users/ericfoster/Documents/JavaScript/elementsJS' ]
12 verbose tarball /Users/ericfoster/.npm/elementsJS/0.9.28/package.tgz
13 verbose folder /Users/ericfoster/Documents/JavaScript/elementsJS
14 verbose addLocalTarball adding from inside cache /Users/ericfoster/.npm/elementsJS/0.9.28/package.tgz
15 silly cache afterAdd elementsJS@0.9.28
16 verbose afterAdd /Users/ericfoster/.npm/elementsJS/0.9.28/package/package.json not in flight; writing
17 verbose afterAdd /Users/ericfoster/.npm/elementsJS/0.9.28/package/package.json written
18 silly publish { name: 'elementsJS',
18 silly publish   version: '0.9.28',
18 silly publish   description: 'A Very Unique and Modern JavaScript DOM Manipulation/Convenience Function Library.',
18 silly publish   main: './dist/index.js',
18 silly publish   dependencies: { 'babel-polyfill': '^6.3.14', clivi: '^0.1.2' },
18 silly publish   devDependencies:
18 silly publish    { 'ace-builds': '^1.2.2',
18 silly publish      'ace-editor-builds': '^1.2.0',
18 silly publish      'babel-preset-es2015': '^6.6.0',
18 silly publish      bowser: '^1.1.0',
18 silly publish      chai: '^3.5.0',
18 silly publish      'font-awesome': '^4.6.1',
18 silly publish      gulp: '^3.9.1',
18 silly publish      'gulp-babel': '^6.1.2',
18 silly publish      'gulp-uglify': '^1.5.3',
18 silly publish      'gulp-webpack': '^1.5.0',
18 silly publish      'highlight.js': '^9.3.0',
18 silly publish      marked: '^0.3.5',
18 silly publish      md5: '^2.1.0',
18 silly publish      mocha: '^2.5.3',
18 silly publish      'phantomjs-prebuilt': '^2.1.7',
18 silly publish      'run-sequence': '^1.1.5',
18 silly publish      webpack: '^1.12.15' },
18 silly publish   scripts:
18 silly publish    { test: 'echo "Error: no test specified" && exit 1',
18 silly publish      start: 'node server.js' },
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/ejames9/elementsJS.git' },
18 silly publish   keywords:
18 silly publish    [ 'JavaScript',
18 silly publish      'alias',
18 silly publish      'DOM',
18 silly publish      'DOM Manipulation',
18 silly publish      'functions',
18 silly publish      'xhr',
18 silly publish      'loggers',
18 silly publish      'ajax',
18 silly publish      'utility',
18 silly publish      'convenience',
18 silly publish      'jquery',
18 silly publish      'sugar' ],
18 silly publish   author: { name: 'Eric James Foster' },
18 silly publish   license: 'ISC',
18 silly publish   bugs: { url: 'https://github.com/ejames9/elementsJS/issues' },
18 silly publish   homepage: 'https://github.com/ejames9/elementsJS#readme',
18 silly publish   readme: '## [Click Here for the Full API Documentation.](http://elementsjs.io) \n\n# <a class=\'titleLinks\' id=\'installation\'>Installation</a> \nThere are a couple different ways to use elementsJS. The first is by simply using the function library. The second, is to make use of the new convenient elements syntax. If you would like to use the elements syntax, a simple compilation step is necessary. If you\'d like to learn more, [click here](https://www.npmjs.com/package/gulp-elementsjs-interpreter).\n\nThe first step, however, is to simply install the library. elementsJS can be installed using either bower or npm package managers and *required* [CommonJS](http://www.commonjs.org/) style, or *import*-ed [es6](http://exploringjs.com/es6/ch_modules.html#_importing-and-exporting-in-detail) style. You may also include the cdn link in your html.\n\n### elementsJS CDN:\n\n```html\n<script type=\'text/javascript\' src=\'https://github.com/ejames9/elementsJS/e531c38/index.js\'></script>\n\n```\n\n### npm:\n```\n$ npm i elementsJS\n```\n\n## <a class=\'titleLinks\' id=\'Usage\'>Usage</a> <a id=\'huh\'></a>\nIf you used either npm or Bower, you can use the library as below:\n\n```js\n//import the library CommonJS style\nvar elemsJS = require(\'elementsJS\');\n//use the elementsJS log() function\nvar foo = (bar, baz)=> {\n\telemsJS.log(String(bar + baz < 100), \'blue\', true);\n};\n\nfoo(9, 99);\n\n```\n\nThe above is a perfectly fine way to use elementsJS, however, the library was written in the spirit of making code more legible and perhaps, more aesthetically pleasing. That said, I reccomend using either [EcmaScript 2015(es6)\'s ***import***](http://exploringjs.com/es6/ch_modules.html#_importing-and-exporting-in-detail) functionality or a custom elementsJS [**`imports()`**](https://www.npmjs.com/package/gulp-elementsjs-interpreter) function to import the individual functions, so that the elements object doesn\'t need referencing every time a library function is used. See below:\n\n### ES2015:\n\n```javascript\n//import the library\'s functions separately\nimport { log, err, el, dom, make, kill } from \'elementsJS\';\n/*use the elementsJS log() function, without referencing the\nelements object*/\nvar foo = (bar, baz)=> {\n    log(String(bar + baz < 100), \'blue\', true);\n    return (bar + baz < 100);\n};\n//use the dom() and log() functions\n if (foo(9, 99)) {\n \tdom(\'#foobar\')\n \t\t.html(\'Hello!\')\n \t\t.color(\'blue\')\n \t\t.font(\'hack\');\n\n \tlog(\'Confirmation.\', \'#090\', true);\n }\n\n```\n\n### elementsJS:\n\n```javascript\n//import the imports() function from elementsJS\nvar imports = require(\'elementsJS\').imports;\n/*use the imports() function to import JS modules and their individual functions*/\nimports({\n     \'lodash\': [\'omit\', \'deburr\', \'each\', \'map\'],\n \'elementsJS\': [\'go\', \'on\', \'off\', \'put\', \'log\', \'make\'],\n     \'jQuery\': \'$\'\n});\n//use any of the above functions without referencing the associated module object\nvar onGo = function() {\n\tmake(\'#comment\', \'input\')\n\t\t\t.size(\'20px\', \'100px\')\n\t\t\t.borderRadius(\'5px)\n\t\t\t.put(\'#footer\');\n}\ngo(onGo);\n\n```\n\nBoth of these options, though require an additional compilation step. To use *es6* functionality, code must be compiled with [babel](https://babeljs.io/), and the elementsJS *imports()* function needs to be compiled using the [elementsJS-interpreter](https://www.npmjs.com/package/gulp-elementsjs-interpreter). If you are using a build system such as [gulp](http://gulpjs.com/) or [grunt](http://gruntjs.com/)(coming soon), however, this step is a breeze ([Click here](#) to learn about using a build system in your development).\n\nIf you do decide to use the elementsJS *imports()* function, you can also try out the elements syntax, as the elementsJS-interpreter will parse your code for this syntax as well as the *imports()* function.\n\n# [Click Here for the full API Documentation.](http://elementsjs.io) ',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '936f26c749dfb11314bd2e1e92d40f9146efcc74',
18 silly publish   _id: 'elementsJS@0.9.28',
18 silly publish   _shasum: '450031646d19e83ee339d6921950a08cfc4472bc',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name elementsJS
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/elementsJS
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /Users/ericfoster/.npm/elementsJS/0.9.28/package.tgz
26 verbose request uri https://registry.npmjs.org/elementsJS
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 2:12:40 AM
29 verbose request using bearer token for auth
30 verbose request id 72f8082cc565af8b
31 http request PUT https://registry.npmjs.org/elementsJS
32 http 403 https://registry.npmjs.org/elementsJS
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=300',
33 verbose headers   'content-length': '96',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Sat, 11 Jun 2016 09:12:44 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-sjc3130-SJC',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1465636362.651566,VS0,VE2264',
33 verbose headers   vary: 'Accept-Encoding' }
34 verbose request invalidating /Users/ericfoster/.npm/registry.npmjs.org/elementsJS on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 0.9.28." : elementsJS
36 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
36 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
36 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
36 verbose stack     at emitTwo (events.js:87:13)
36 verbose stack     at Request.emit (events.js:172:7)
36 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1082:10)
36 verbose stack     at emitOne (events.js:82:20)
36 verbose stack     at Request.emit (events.js:169:7)
36 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1009:12)
37 verbose statusCode 403
38 verbose pkgid elementsJS
39 verbose cwd /Users/ericfoster/Documents/JavaScript/elementsJS
40 error Darwin 15.0.0
41 error argv "/usr/local/Cellar/node/5.0.0/bin/node" "/usr/local/bin/npm" "publish"
42 error node v5.0.0
43 error npm  v3.3.9
44 error code E403
45 error "You cannot publish over the previously published version 0.9.28." : elementsJS
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
